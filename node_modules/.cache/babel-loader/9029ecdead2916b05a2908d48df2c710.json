{"ast":null,"code":"var _jsxFileName = \"/Users/francesco/Desktop/Web Dev/react-course/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const DUMMY_EXPENSES = [{\n    id: 'e1',\n    title: 'Car insurance',\n    amount: 25.67,\n    date: new Date(2021, 5, 9)\n  }, {\n    id: 'e2',\n    title: 'Veterinary',\n    amount: 42.60,\n    date: new Date(2021, 2, 9)\n  }, {\n    id: 'e3',\n    title: 'Groceries',\n    amount: 31.50,\n    date: new Date(2021, 8, 9)\n  }, {\n    id: 'e4',\n    title: 'New monitor',\n    amount: 31.50,\n    date: new Date(2021, 10, 9)\n  }];\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const filterYearHandler = selectedYear => {\n    setExpenses(expenses => expenses.filter(expense => expense.date.getFullYear() === Number(selectedYear)));\n    console.log(expenses);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      onYearFilter: filterYearHandler,\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vWte2SAXNm+1bDonaLQzZSzOmNc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/francesco/Desktop/Web Dev/react-course/src/App.js"],"names":["React","useState","Expenses","NewExpense","App","DUMMY_EXPENSES","id","title","amount","date","Date","expenses","setExpenses","addExpenseHandler","expense","prevExpenses","filterYearHandler","selectedYear","filter","getFullYear","Number","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,cAAc,GAAG,CACrB;AAAEC,IAAAA,EAAE,EAAC,IAAL;AAAWC,IAAAA,KAAK,EAAE,eAAlB;AAAmCC,IAAAA,MAAM,EAAE,KAA3C;AAAkDC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAAxD,GADqB,EAErB;AAAEJ,IAAAA,EAAE,EAAC,IAAL;AAAWC,IAAAA,KAAK,EAAE,YAAlB;AAAgCC,IAAAA,MAAM,EAAE,KAAxC;AAA+CC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAArD,GAFqB,EAGrB;AAAEJ,IAAAA,EAAE,EAAC,IAAL;AAAWC,IAAAA,KAAK,EAAE,WAAlB;AAA+BC,IAAAA,MAAM,EAAE,KAAvC;AAA8CC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB;AAApD,GAHqB,EAIrB;AAAEJ,IAAAA,EAAE,EAAC,IAAL;AAAWC,IAAAA,KAAK,EAAE,aAAlB;AAAiCC,IAAAA,MAAM,EAAE,KAAzC;AAAgDC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,EAAd,EAAiB,CAAjB;AAAtD,GAJqB,CAAvB;AAOA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACI,cAAD,CAAxC;;AAEA,QAAMQ,iBAAiB,GAAIC,OAAD,IAAa;AACrCF,IAAAA,WAAW,CAACG,YAAY,IAAI;AAC1B,aAAO,CAACD,OAAD,EAAU,GAAGC,YAAb,CAAP;AACD,KAFU,CAAX;AAGD,GAJD;;AAMA,QAAMC,iBAAiB,GAAIC,YAAD,IAAkB;AAC1CL,IAAAA,WAAW,CAACD,QAAQ,IAAIA,QAAQ,CAACO,MAAT,CAAgBJ,OAAO,IAAIA,OAAO,CAACL,IAAR,CAAaU,WAAb,OAA+BC,MAAM,CAACH,YAAD,CAAhE,CAAb,CAAX;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEG,iBAAxB;AAA2C,MAAA,KAAK,EAAEL;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA5BD;;GAAMP,G;;KAAAA,G;AA8BN,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n\n  const DUMMY_EXPENSES = [\n    { id:'e1', title: 'Car insurance', amount: 25.67, date: new Date(2021,5,9)},\n    { id:'e2', title: 'Veterinary', amount: 42.60, date: new Date(2021,2,9)},\n    { id:'e3', title: 'Groceries', amount: 31.50, date: new Date(2021,8,9)},\n    { id:'e4', title: 'New monitor', amount: 31.50, date: new Date(2021,10,9)},\n  ]\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    })\n  }\n\n  const filterYearHandler = (selectedYear) => {\n    setExpenses(expenses => expenses.filter(expense => expense.date.getFullYear() === Number(selectedYear)))\n    console.log(expenses)\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses onYearFilter={filterYearHandler} items={expenses}/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}